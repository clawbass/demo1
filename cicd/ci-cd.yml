name: Build & Deploy to ECS (staging)

on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-central-1
  PROJECT: dash-staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push FRONTEND
        run: |
          FRONTEND_URI=$(aws ecr describe-repositories --repository-names dempo1-frontend --query 'repositories[0].repositoryUri' --output text)
          docker build -t ${FRONTEND_URI}:latest ./frontend
          docker push ${FRONTEND_URI}:latest
      
      - name: Build & push PROXY
        run: |
          PROXY_URI=$(aws ecr describe-repositories --repository-names ${PROJECT}-proxy --query 'repositories[0].repositoryUri' --output text)
          docker build -t ${PROXY_URI}:latest ./deploy/nginx
          docker push ${PROXY_URI}:latest

      - name: Force new deployment (proxy)
        run: |
          aws ecs update-service --cluster demo1-cluster --service demo1-proxy --force-new-deployment
      - name: Force new deployment (frontend)
        run: |
          aws ecs update-service --cluster demo1}-cluster --service demo1-frontend --force-new-deployment
      - name: Force new deployment (backend)
        run: |
          aws ecs update-service --cluster demo1-cluster --service demo1-backend --force-new-deployment
